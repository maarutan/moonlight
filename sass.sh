#!/usr/bin/env bash
# ┌─┐┌─┐┌─┐┌─┐    ┌─┐┌─┐┌┬┐┌─┐┬┬  ┌─┐┬─┐
# └─┐├─┤└─┐└─┐    │  │ ││││├─┘││  ├┤ ├┬┘
# └─┘┴ ┴└─┘└─┘────└─┘└─┘┴ ┴┴  ┴┴─┘└─┘┴└─
# --------------------------------------------------------------------
# Copyright (c) 2025 maarutan. \ Marat Arzymatov All Rights Reserved.
# https://github.com/maarutan
# --------------------------------------------------------------------
#
# Script Documentation:
#
# This script automates the management and compilation of Sass styles.
# It performs the following tasks:
# 1. Scans a specified styles directory for Sass component directories.
#    - The directory must either start with "_" or end with "_".
# 2. In each detected directory, it looks for a special "_import.sass" file.
#    - You should put your Sass @use imports in these files.
# 3. Generates a central "import.sass" file in the "styles" folder,
#    collecting all @use statements automatically.
# 4. Provides a menu to either:
#    a) Start watching Sass files for changes and compile to main.css
#    b) Rebuild the import.sass file and show the imports
#    c) Exit the script
# 5. Ensures that node_modules exist and installs Sass if necessary.
#
# How it works:
# - Uses "realpath" to determine relative paths for imports.
# - Uses animation and colored output for better visualization.
# - Handles interruptions (Ctrl-C) gracefully.
#
# Usage:
# ./this_script.sh
# Follow the menu prompts.
# --------------------------------------------------------------------
# by from your [ maaru 💘 ]

current_dir=$(dirname "$0")
styles_dir="$current_dir/styles"
search_dir="$styles_dir"
node_modules="$current_dir/node_modules"
sass_source="$node_modules/.bin/sass"

main_css="$current_dir/main.css"
main_css_map=$main_css".map"
root_import="$current_dir/styles/import.sass"
use_char="_import.sass"
use_import_sass="@use"
sleep_timeout=0.03

RED=$'\e[31m'
GREEN=$'\e[32m'
YELLOW=$'\e[33m'
CYAN=$'\e[36m'
RESET=$'\e[0m'
UNDERLINE=$'\e[4m'
RESET_UNDERLINE=$'\e[0m'
GREY=$'\e[90m'
MAGENTA=$'\e[35m'
LIGHTGREEN=$'\e[92m'
WHITE=$'\e[97m'

root_import_real=$(realpath "$root_import")
main_css_real=$(realpath "$main_css")

title="// ┌─┐┌─┐┌─┐┌─┐  ┌─┐┌┬┐┬ ┬┬  ┬┌┐┌┌─┐
// └─┐├─┤└─┐└─┐  └─┐ │ └┬┘│  │││││ ┬
// └─┘┴ ┴└─┘└─┘  └─┘ ┴  ┴ ┴─┘┴┘└┘└─┘
// ----------------------------------------"
footer="// ----------------------------------------"
after_foot="// ℹ️ This file is auto-generated by the Sass import builder script.
//    ▶ Do not edit manually — put your imports in _import.sass of each component directory.
"

print_line() {
    echo -e "${GREEN}───────────────────────────────────────────────────${RESET}"
}

sass_import_handler() {
    local dir="$1"
    local file="$dir/$use_char"
    if [ -f "$file" ]; then
        local ns=$(basename "$dir") #checkshell disable=SC2001
        ns="${ns#_}"
        local rel_dir
        rel_dir=$(realpath --relative-to="$(dirname "$root_import")" "$dir")
        printf '%s "%s/import" as %s\n' "$use_import_sass" "$rel_dir" "$ns"
    fi
}

show_imports_animated() {
    while IFS= read -r line || [ -n "$line" ]; do
        if [[ "$line" =~ ^[[:space:]]*// ]]; then
            printf '%b%b%b\n' "${YELLOW}┃ ${RESET}" "${GREY}${line}${RESET}" ""
        elif [[ "$line" =~ ^[[:space:]]*(@use)[[:space:]]+\"([^\"]+)\"[[:space:]]+as[[:space:]]+([A-Za-z0-9_]+) ]]; then
            local kw=${BASH_REMATCH[1]}
            local path=${BASH_REMATCH[2]}
            local ns=${BASH_REMATCH[3]}
            printf '%b%b%b\n' "${YELLOW}┃ ${RESET}" "${MAGENTA}${kw}${RESET} ${LIGHTGREEN}\"${path}\"${RESET} ${MAGENTA}as${RESET} ${WHITE}${ns}${RESET}" ""
        else
            printf '%b%b%b\n' "${YELLOW}┃ ${RESET}" "$line" ""
        fi
        sleep "$sleep_timeout"
    done < "$root_import"
}

build_import() {
    clear
    {
        echo "$title"
        echo
        for dir in "$search_dir"/_* "$search_dir"/*_; do
            [ -d "$dir" ] || continue
            base=$(basename "$dir")
            if [[ "$base" == _* && "$base" != __* ]] || [[ "$base" == *_ && "$base" != *__ ]]; then
                if [ -f "$dir/$use_char" ]; then
                    sass_import_handler "$dir"
                fi
            fi
        done
        echo
        echo "$footer"
        echo "$after_foot"
    } > "$root_import"

    echo -e "\n\n${CYAN}⚡ ✨ Rewritten file:${RESET} $root_import_real"
    echo -e "$(print_line)"
    show_imports_animated
    echo -e "$(print_line)"
}

print_menu() {
    echo
    local options=("⚡ Start compilation" "🔄 Rewrite imports and show" "🟢 Exit")
    for i in "${!options[@]}"; do
        local num_color=$CYAN
        local text_color=$MAGENTA
        local num=$((i+1))
        printf '%b%b%b %b%b%b\n' \
            "$num_color" "$num)" "$RESET" \
            "$text_color" "$UNDERLINE${options[$i]}${RESET_UNDERLINE}" "$RESET"
        sleep "$sleep_timeout"
    done
    echo
    printf "${YELLOW}Choose an option [1-3]: ${RESET}"
}

if [ ! -d "$node_modules" ]; then
    echo "node_modules not found. Installing npm dependencies..."
    npm install
fi
if [ ! -x "$sass_source" ]; then
    echo "Sass not found. Installing Sass..."
    npm install --save-dev sass
fi


trap_handler() {
    if command -v jq >/dev/null 2>&1; then
        jq '.' main.css.map > main.css.map.tmp && mv main.css.map.tmp main.css.map
    fi

    echo -e "\n$(print_line)\n\n${RED}🔴 Interrupted.${RESET}\n\n"
    exit 130
}
trap trap_handler INT

clear
build_import

while true; do
    print_menu
    if ! read -r choice; then
        echo -e "${RED}🔴 No input. Exiting.${RESET}"
        exit 1
    fi
    case "$choice" in
        1)
            echo -e "${MAGENTA}⚡ ▶ Starting compilation...${RESET}"
            sleep "$sleep_timeout"
            echo -e "${MAGENTA}⤷ Rewriting import file before compile...${RESET}"
            sleep "$sleep_timeout"
            build_import
            echo -e "\n${CYAN}🚀 ${MAGENTA}▶ Launching sass watch:${RESET}"
            echo -e "       ${CYAN}⤷${RESET} ${YELLOW}${UNDERLINE}$root_import_real${RESET_UNDERLINE}${RESET} ->"
            echo -e "         ${CYAN}⤷${RESET} ${YELLOW}${UNDERLINE}$main_css_real${RESET_UNDERLINE}${RESET}\n"
            sleep "$sleep_timeout"
            echo -e "\n"$(print_line)"\n\n"
            "$sass_source" --watch "$root_import_real":"$main_css_real"
            break
            ;;
        2)
            echo -e "${MAGENTA}🔄 ⤷ Rewriting import file now...${RESET}"
            sleep "$sleep_timeout"
            build_import
            ;;
        3)
            echo -e "${GREEN}🟢 ✔ Exit.${RESET}"
            exit 0
            ;;
        *)
            clear
            echo -e "${RED}🔴 Invalid choice.${RESET}"
            ;;
    esac
done
